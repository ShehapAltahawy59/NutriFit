# Multi-stage build for production
FROM python:3.11-slim as builder

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Install build dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libffi-dev \
    libssl-dev \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install core dependencies first
RUN pip install --no-cache-dir --upgrade pip setuptools wheel

# Copy requirements and install dependencies in specific order
COPY requirements.txt .

# Install OpenAI and its dependencies first
RUN pip install --no-cache-dir "openai>=1.0.0" "tiktoken>=0.5.0"

# Install Azure dependencies
RUN pip install --no-cache-dir "azure-identity>=1.15.0"

# Install AutoGen dependencies
RUN pip install --no-cache-dir "autogen-core>=0.2.0" "autogen-ext>=0.2.0" "autogen-agentchat>=0.2.0"

# Install remaining dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Verify critical imports
RUN python -c "import tiktoken; from autogen_ext.models.openai import AzureOpenAIChatCompletionClient; import openai; print('Dependencies verified successfully')"

# Production stage
FROM python:3.11-slim as production

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV FLASK_APP=main.py
ENV FLASK_ENV=production

# Install runtime dependencies only
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Create non-root user
RUN useradd --create-home --shell /bin/bash app

# Set work directory
WORKDIR /app

# Copy application code (optimized order for caching)
COPY --chown=app:app main.py .
COPY --chown=app:app requirements.txt .
COPY --chown=app:app start.sh .
COPY --chown=app:app Agents/ ./Agents/

# Make startup script executable
RUN chmod +x start.sh

# Verify critical imports again in production stage
RUN python -c "import tiktoken; from autogen_ext.models.openai import AzureOpenAIChatCompletionClient; import openai; print('Production dependencies verified successfully')"

# Switch to non-root user
USER app

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:5000/ping || curl -f http://localhost:5000/health || exit 1

# Run the startup script
CMD ["./start.sh"] 
